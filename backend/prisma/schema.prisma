// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

enum Role {
	USER
	ADMIN
	OWNER
}

enum Visibility {
	PUBLIC
	PRIVATE
	PROTECTED
}

enum Status {
	PENDING
	ACCEPTED
	REJECTED
}

model User {
	id                            String       @id @default(cuid())
	userName                      String?       @unique
	firstName                     String
	lastName                      String
	email                         String?      @unique
	picture                       String?      @default("") // Use nullable (?) for optional fields
	accessToken                   String?      @default("") // Use nullable (?) for optional fields
	password                      String? // Password should not have a default value
	twoFactorAuthenticationSecret String?
	membership                    Participant[]
	isTwoFactorAuthenticationEnabled Boolean @default(false)
	senders                       FriendShip[] @relation("sender")
	receivers                     FriendShip[] @relation("receiver")
	blockSenders                  Block[] @relation("sender")
	blockReceivers                Block[] @relation("receiver")
	// lastSeen    DateTime?    @default(now())

	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}

model Participant {
	id String @id @default(cuid())

	room ChatRoom @relation(fields: [rid], references: [id])
	rid  String

	user User   @relation(fields: [uid], references: [id])
	uid  String

	messages    Message[]

	role Role @default(USER)

	isOnline Boolean @default(false)
	isMuted  Boolean @default(false)
	isBanned Boolean @default(false)

	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	@@unique([uid, rid])
}

model ChatRoom {
	id           String        @id @default(cuid())
	name         String
	visibility   Visibility    @default(PUBLIC)
	password     String?
	// message      String
	participants Participant[]
	messages     Message[]
	is_DM        Boolean       @default(true)

	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}

model FriendShip {
	id String @id @default(cuid())

	user   User   @relation(name: "sender", fields: [userId], references: [id])
	userId String

	friend   User   @relation(name: "receiver", fields: [friendId], references: [id])
	friendId String

	status Status @default(PENDING)

	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	@@unique([userId, friendId])
}

model Block {
	id String @id @default(cuid())

	user	User   @relation(name: "sender", fields: [uid], references: [id])
	uid		String

	friend	User   @relation(name: "receiver", fields: [fid], references: [id])
	fid		String

	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	@@unique([uid, fid])
}

model Message {
	id  String @id @default(cuid())
	msg String

	userId String? // This field refers to the sender of the message
	user   Participant?   @relation(fields: [userId], references: [id])

	rid  String?
	room ChatRoom? @relation(fields: [rid], references: [id])

	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}
